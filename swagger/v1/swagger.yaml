---
openapi: 3.0.1
info:
  title: Sopha API
  version: v1
  contact:
    name: Carlos Adolfo
    email: cardolfo@gmail.com
paths:
  "/v1/stores":
    post:
      summary: Creates a store
      tags:
      - Stores
      security:
      - bearer_auth:
        - Bearer Authentication
      parameters:
      - name: Authorization
        in: header
        default: Token value
        description: The user JWT token provided to you
        schema:
          type: string
      responses:
        '201':
          description: store created
        '401':
          description: Creates a store not authorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/v1/stores/{id}":
    get:
      summary: Retrieves a store
      tags:
      - Stores
      security:
      - bearer_auth:
        - Bearer Authentication
      parameters:
      - name: Authorization
        in: header
        default: Token value
        description: The user JWT token provided to you
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: store found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                required:
                - id
                - name
        '204':
          description: store not found
        '401':
          description: Retrieves a store not authorized
    put:
      summary: Updates a store
      tags:
      - Stores
      security:
      - bearer_auth:
        - Bearer Authentication
      parameters:
      - name: Authorization
        in: header
        default: Token value
        description: The user JWT token provided to you
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: store updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                required:
                - id
                - name
        '204':
          description: store not found
        '401':
          description: Updates a store not authorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: Remove a store
      tags:
      - Stores
      security:
      - bearer_auth:
        - Bearer Authentication
      parameters:
      - name: Authorization
        in: header
        default: Token value
        description: The user JWT token provided to you
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: store removed
        '204':
          description: store not found
        '401':
          description: Remove a storee not authorized
  "/signin":
    post:
      summary: Sign in User
      tags:
      - User
      parameters: []
      responses:
        '200':
          description: Sign in successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
              - name
              - password
  "/signup":
    post:
      summary: Sign up User
      tags:
      - User
      parameters: []
      responses:
        '200':
          description: Sign up successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
              required:
              - name
              - password
servers:
- url: http://ec2-3-89-242-61.compute-1.amazonaws.com
  variables:
    defaultHost:
      default: ec2-3-89-242-61.compute-1.amazonaws.com
components:
  securitySchemes:
    bearerAuth:
      name: Bearer Authentication
      type: http
      scheme: bearer
      bearerFormat: JWT
